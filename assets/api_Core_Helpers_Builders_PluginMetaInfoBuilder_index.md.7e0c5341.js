import{_ as t,c as e,o as r,a as s}from"./app.4d2f09ba.js";const f=JSON.parse('{"title":"PluginMetaInfoBuilder Class","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[]}],"relativePath":"api/Core/Helpers/Builders/PluginMetaInfoBuilder/index.md"}'),a={name:"api/Core/Helpers/Builders/PluginMetaInfoBuilder/index.md"},n=s(`<h1 id="pluginmetainfobuilder-class" tabindex="-1">PluginMetaInfoBuilder Class <a class="header-anchor" href="#pluginmetainfobuilder-class" aria-hidden="true">#</a></h1><p><strong>Namespace:</strong> <a href="./../">EvoSC.Core.Helpers.Builders</a><br><strong>Assembly:</strong> EvoSC#<br><strong>Assembly Version:</strong> 1.0.0</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginMetaInfoBuilder</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IBuilder</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IPluginMetaInfo</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Inheritance:</strong> object â†’ PluginMetaInfoBuilder</p><p><strong>Implements:</strong> IBuilder&lt;<a href="./../../../Plugins/Abstractions/IPluginMetaInfo/">IPluginMetaInfo</a>&gt;</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="./constructors/">PluginMetaInfoBuilder()</a></td><td></td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="./methods/AddAssemblyFile.html#addassemblyfilefileinfo">AddAssemblyFile(FileInfo)</a></td><td></td></tr><tr><td><a href="./methods/AddAssemblyFile.html#addassemblyfilestring">AddAssemblyFile(string)</a></td><td></td></tr><tr><td><a href="./methods/AddDependency.html">AddDependency(IPluginDependency)</a></td><td></td></tr><tr><td><a href="./methods/Build.html">Build()</a></td><td></td></tr><tr><td><a href="./methods/NewInternal.html">NewInternal&lt;T&gt;()</a></td><td></td></tr><tr><td><a href="./methods/SetInternal.html">SetInternal(bool)</a></td><td></td></tr><tr><td><a href="./methods/WithAuthor.html">WithAuthor(string)</a></td><td></td></tr><tr><td><a href="./methods/WithDirectory.html#withdirectorydirectoryinfo">WithDirectory(DirectoryInfo)</a></td><td></td></tr><tr><td><a href="./methods/WithDirectory.html#withdirectorystring">WithDirectory(string)</a></td><td></td></tr><tr><td><a href="./methods/WithInternalClass.html#withinternalclasstype">WithInternalClass(Type)</a></td><td></td></tr><tr><td><a href="./methods/WithInternalClass.html#withinternalclasst">WithInternalClass&lt;T&gt;()</a></td><td></td></tr><tr><td><a href="./methods/WithName.html">WithName(string)</a></td><td></td></tr><tr><td><a href="./methods/WithSummary.html">WithSummary(string)</a></td><td></td></tr><tr><td><a href="./methods/WithTitle.html">WithTitle(string)</a></td><td></td></tr><tr><td><a href="./methods/WithVersion.html#withversionversion">WithVersion(Version)</a></td><td></td></tr><tr><td><a href="./methods/WithVersion.html#withversionstring">WithVersion(string)</a></td><td></td></tr></tbody></table><hr><p><em>Documentation generated by <a href="https://github.com/ap0llo/mddocs" target="_blank" rel="noreferrer">MdDocs</a></em></p>`,11),d=[n];function l(o,i,h,c,p,m){return r(),e("div",null,d)}const g=t(a,[["render",l]]);export{f as __pageData,g as default};
