import{_ as s,c as a,o as n,a as l}from"./app.4d2f09ba.js";const d=JSON.parse('{"title":"Localization","description":"","frontmatter":{},"headers":[{"level":2,"title":"Getting Started","slug":"getting-started","link":"#getting-started","children":[]},{"level":2,"title":"Using Localization","slug":"using-localization","link":"#using-localization","children":[{"level":3,"title":"Manialinks","slug":"manialinks","link":"#manialinks","children":[]}]},{"level":2,"title":"Referencing Localization Strings","slug":"referencing-localization-strings","link":"#referencing-localization-strings","children":[{"level":3,"title":"DynamicObject","slug":"dynamicobject","link":"#dynamicobject","children":[]},{"level":3,"title":"Indexer","slug":"indexer","link":"#indexer","children":[]}]},{"level":2,"title":"Adding Multilingual Support","slug":"adding-multilingual-support","link":"#adding-multilingual-support","children":[]},{"level":2,"title":"Configuring the Default Language","slug":"configuring-the-default-language","link":"#configuring-the-default-language","children":[]},{"level":2,"title":"Player Specific Language","slug":"player-specific-language","link":"#player-specific-language","children":[]},{"level":2,"title":"Arbitrary String Translations","slug":"arbitrary-string-translations","link":"#arbitrary-string-translations","children":[]}],"relativePath":"development/modules/advanced/localization.md"}'),e={name:"development/modules/advanced/localization.md"},o=l(`<h1 id="localization" tabindex="-1">Localization <a class="header-anchor" href="#localization" aria-hidden="true">#</a></h1><p>EvoSC# provides a general system for localizing your modules. It leverages the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.resources.resourcemanager?view=net-7.0" target="_blank" rel="noreferrer">ResourceManager</a> to provide an easy-to-use but powerful interface for all your localization needs.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can find the project for translating EvoSC# core and internal modules here: <a href="https://crowdin.com/project/evosc-sharp" target="_blank" rel="noreferrer">https://crowdin.com/project/evosc-sharp</a></p><p>We welcome any contributions!</p></div><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h2><p>To get started with localizing your module, begin by creating a new file in the root namespace of your module called <code>Localization.resx</code>. The naming of this file is important as EvoSC# will look for this particular resource containing locales.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Your IDE might be able to create this file and fill the contents automatically, but be aware that it may also generate a <em>.Design.cs</em> file, which we will not be using.</p></div><p>In the file, paste the following contents:</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;?</span><span style="color:#F07178;">xml</span><span style="color:#C792EA;"> version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> encoding</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">?&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">root</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">xsd</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">schema</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">xsd</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.w3.org/2001/XMLSchema</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">msdata</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">urn:schemas-microsoft-com:xml-msdata</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">xsd</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">element</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">msdata</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">IsDataSet</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">xsd</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">element</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">xsd</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">schema</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">resmimetype</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">text/microsoft-resx</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">1.3</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">reader</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">writer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">resheader</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">&lt;!-- Localization data goes here --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">root</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>We are now ready to begin adding data to this resource file. Your IDE might have an editor for this, which makes this process easier.</p><p>At the bottom, before the <code>&lt;/root&gt;</code> tag, we can begin adding data tags. For example:</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GreetPlayer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xml</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">space</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">preserve</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Hello {0}!</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">data</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>The <code>name</code> attribute denotes the name of the locale key you wish to use, and inside the <code>&lt;data&gt;</code> tag, write the value within two <code>&lt;value&gt;</code> tags.</p><p>You have now successfully created your first localization file. This will be your default localization and the fallback for any other language that doesn&#39;t exist. We will get into how to add different languages later.</p><p>Note the <code>{0}</code> in the value. This will be replaced by an argument passed to the locale string. In this case, it is the first argument (position 0). You can add as many arguments as you want.</p><p>This supports all formatting from the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.string.format" target="_blank" rel="noreferrer"><code>string.Format</code></a> method.</p><h2 id="using-localization" tabindex="-1">Using Localization <a class="header-anchor" href="#using-localization" aria-hidden="true">#</a></h2><p>Most of the time, localization will be used for chat messages and <a href="/development/modules/manialinks/introduction.html">Manialinks</a>. We can begin with an example of using localization for a chat command that responds with a message to the chat.</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> EvoSC.Commands</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> EvoSC.Commands.Attributes</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> EvoSC.Common.Controllers</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> EvoSC.Common.Controllers.Attributes</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> EvoSC.Manialinks.Interfaces</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">namespace</span><span style="color:#A6ACCD;"> EvoSC</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Modules</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Official</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ExampleModule</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Controller</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ExampleController2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">EvoScController</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">CommandInteractionContext</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServerClient</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_server</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">dynamic</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_locale</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ExampleController2</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IServerClient</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">server</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Locale</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">locale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        _server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> server</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        _locale </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> locale</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">ChatCommand</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">greet</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Greet the player with localization.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GreetPlayerAsync</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">        _server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SendChatMessageAsync</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">_locale</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GreetPlayer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Context</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Player</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NickName</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>When a player sends the command <code>/greet</code> to the chat, the server will respond with whatever the current language that is set for EvoSC#. In this case, if we use the localization file above, we only have one language, so the message should be somthing similar to: <em>Hello PlayerName!</em></p><p>Note the way we are setting up the locale object and refering to our string. Here we are using DynamicObject referencing, and to pass arguments to the locale, we call it like a method with the arguments to pass. If you didn&#39;t have any arguments to pass, you would omit the method call syntax and just type <code>_locale.GreetPlayer</code>.</p><p>There are other ways to refer to locales which we will go over later.</p><h3 id="manialinks" tabindex="-1">Manialinks <a class="header-anchor" href="#manialinks" aria-hidden="true">#</a></h3><p>To use localization in Manialinks, we need to pass the <code>Locale</code> instance as a variable to it.</p><p>For example:</p><div class="language-xml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">using</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EvoSC.Common.Interfaces.Localization</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">property</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dynamic</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Locale</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">label</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">text</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{{ Locale.MyLocaleName }}}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">textsize</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>We must then pass the &quot;Locale&quot; variable when sending the manialink:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">_manialinks</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SendManialinkAsync</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyManialink</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Locale </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="referencing-localization-strings" tabindex="-1">Referencing Localization Strings <a class="header-anchor" href="#referencing-localization-strings" aria-hidden="true">#</a></h2><p>Currently, there are two common ways to do this. Either through DynamicObject or an indexer.</p><h3 id="dynamicobject" tabindex="-1">DynamicObject <a class="header-anchor" href="#dynamicobject" aria-hidden="true">#</a></h3><p>This is the recommended method and is compatible with XML attributes, which are often used in Manialinks.</p><p>To use DynamicObject referencing, you first have to cast the <code>Locale</code> instance to <code>dynamic</code>. With dependency injection, this can be done by injecting <code>Locale</code> and setting it to a dynamic variable in the class. For example:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyClass</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// use the &quot;dynamic&quot; type here</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">dynamic</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_locale</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ExampleController2</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Locale</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">locale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        _locale </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> locale</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="referencing-without-arguments" tabindex="-1">Referencing without Arguments <a class="header-anchor" href="#referencing-without-arguments" aria-hidden="true">#</a></h4><p>To obtain strings from a locale with no arguments, you can simple type the name of the locale like this:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MyLocaleName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="referencing-with-arguments" tabindex="-1">Referencing with Arguments <a class="header-anchor" href="#referencing-with-arguments" aria-hidden="true">#</a></h4><p>For arguments, we call the locale name like a method, passing the needed arguments:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MyLocaleName</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">arg1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arg2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="indexer" tabindex="-1">Indexer <a class="header-anchor" href="#indexer" aria-hidden="true">#</a></h3><p>If you&#39;re not using DynamicObject, you can reference the locales using the index pattern.</p><p>For example, lets say we have the class:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyClass</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// use the &quot;Locale&quot; type here</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Locale</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">_locale</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ExampleController2</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Locale</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">locale</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        _locale </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> locale</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="referencing-without-arguments-1" tabindex="-1">Referencing without Arguments <a class="header-anchor" href="#referencing-without-arguments-1" aria-hidden="true">#</a></h4><p>We can now access our locale like this if we don&#39;t have any arguments to pass:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyLocaleName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="referencing-with-arguments-1" tabindex="-1">Referencing with Arguments <a class="header-anchor" href="#referencing-with-arguments-1" aria-hidden="true">#</a></h4><p>If we have arguments, simply add arguments to the indexer:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyLocaleName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arg1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> arg2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ...</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="adding-multilingual-support" tabindex="-1">Adding Multilingual Support <a class="header-anchor" href="#adding-multilingual-support" aria-hidden="true">#</a></h2><p>The process for adding languages is almost the same as creating the default localization file. But the difference is that you specify the define language as the file extension.</p><p>For example for German, the file would be called <code>Localization.de.resx</code>, French would be <code>Localization.fr.resx</code> and so on. You can find all the codes for each language <a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c" target="_blank" rel="noreferrer">here</a>.</p><h2 id="configuring-the-default-language" tabindex="-1">Configuring the Default Language <a class="header-anchor" href="#configuring-the-default-language" aria-hidden="true">#</a></h2><p>To configure the default language, you can find an option under the <code>[Locale]</code> section of the <code>main.toml</code> config file called <code>defaultLanguage</code>. The format of this value is the same language code as explained above under <em>Adding Multilingual Support</em>.</p><h2 id="player-specific-language" tabindex="-1">Player Specific Language <a class="header-anchor" href="#player-specific-language" aria-hidden="true">#</a></h2><p>EvoSC# can adapt the output language depending on a player&#39;s selected language. To do this, prefix the locale reference with <code>.PlayerLanguage</code>.</p><p>For example:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PlayerLanguage</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MyLocaleName</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>or</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">myString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PlayerLanguage</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyLocaleName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">];</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Whenever you prefix with <code>.PlayerLanguage</code>, it puts the locale instance in the state that any reference from this point on will use the player&#39;s selected language.</p><p>You can get a player&#39;s selected language from the <code>Settings</code> property from an <code>IPlayer</code> instance.</p><h2 id="arbitrary-string-translations" tabindex="-1">Arbitrary String Translations <a class="header-anchor" href="#arbitrary-string-translations" aria-hidden="true">#</a></h2><p>It is possible to translate a string which contains localization references, and replace those references with the localization string. This is useful for refering to locales in compile-time constants such as command descriptions.</p><p>To reference a localization string, put the name in between two square brackets. For example: <code>[MyLocaleName]</code></p><p>These can occur anywhere within a string, and you can put multiple of them. For example: <code>My locale: [MyLocaleName]</code></p><p>To translate a string you can use the <code>Translate</code> method. For example:</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">translatedString</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> _locale</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Translate</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">My locale: [MyLocaleName]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,68),p=[o];function t(r,c,i,y,D,F){return n(),a("div",null,p)}const C=s(e,[["render",t]]);export{d as __pageData,C as default};
