import{_ as e,c as s,o as n,a}from"./app.4d2f09ba.js";const m=JSON.parse('{"title":"PluginServiceExtensions.FindPluginByName Method","description":"","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":2,"title":"Returns","slug":"returns","link":"#returns","children":[]}],"relativePath":"api/Core/Plugins/Extensions/PluginServiceExtensions/methods/FindPluginByName.md"}'),r={name:"api/Core/Plugins/Extensions/PluginServiceExtensions/methods/FindPluginByName.md"},t=a(`<h1 id="pluginserviceextensions-findpluginbyname-method" tabindex="-1">PluginServiceExtensions.FindPluginByName Method <a class="header-anchor" href="#pluginserviceextensions-findpluginbyname-method" aria-hidden="true">#</a></h1><p><strong>Declaring Type:</strong> <a href="./../">PluginServiceExtensions</a><br><strong>Namespace:</strong> <a href="./../../">EvoSC.Core.Plugins.Extensions</a><br><strong>Assembly:</strong> EvoSC#<br><strong>Assembly Version:</strong> 1.0.0</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPluginLoadContext</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FindPluginByName</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPluginService</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pluginService</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h2><p><code>pluginService</code> <a href="./../../../Abstractions/IPluginService/">IPluginService</a></p><p><code>name</code> string</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h2><p><a href="./../../../Abstractions/IPluginLoadContext/">IPluginLoadContext</a></p><hr><p><em>Documentation generated by <a href="https://github.com/ap0llo/mddocs" target="_blank" rel="noreferrer">MdDocs</a></em></p>`,10),o=[t];function i(l,p,c,d,u,g){return n(),s("div",null,o)}const y=e(r,[["render",i]]);export{m as __pageData,y as default};
