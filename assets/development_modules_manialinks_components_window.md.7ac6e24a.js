import{_ as t,o,c as e,S as d}from"./chunks/framework.f15d8f8c.js";const u=JSON.parse('{"title":"Window","description":"","frontmatter":{},"headers":[],"relativePath":"development/modules/manialinks/components/window.md","filePath":"development/modules/manialinks/components/window.md"}'),n={name:"development/modules/manialinks/components/window.md"},r=d('<h1 id="window" tabindex="-1">Window <a class="header-anchor" href="#window" aria-label="Permalink to &quot;Window&quot;">​</a></h1><p>Whether the contents of the window can be scrolled</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">import</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">component</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EvoSC.Containers.Window</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">as</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Window</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><strong><code>id</code></strong></td><td><a href="#">`string</a></td><td><code>evosc-window</code></td><td>The ID of the window. Default is &#39;evosc-window&#39;</td></tr><tr><td><strong><code>x</code></strong></td><td><a href="#">`double</a></td><td><code>-50</code></td><td>The X position of the window.</td></tr><tr><td><strong><code>y</code></strong></td><td><a href="#">`double</a></td><td><code>30</code></td><td>The Y position of the window.</td></tr><tr><td><strong><code>width</code></strong></td><td><a href="#">`double</a></td><td><code>100</code></td><td>The width of the window&#39;s outer bounds.</td></tr><tr><td><strong><code>height</code></strong></td><td><a href="#">`double</a></td><td><code>60</code></td><td>The height of the window&#39;s outer bounds.</td></tr><tr><td><strong><code>title</code></strong></td><td><a href="#">`string</a></td><td><code>New Window</code></td><td>The text to show in the titlebar.</td></tr><tr><td><strong><code>icon</code></strong></td><td><a href="#">`string</a></td><td><code>⬜</code></td><td>The icon to show in the titlebar.</td></tr><tr><td><strong><code>style</code></strong></td><td><a href="#">`string</a></td><td><code>default</code></td><td>The style of the window, can be default or secondary.</td></tr><tr><td><strong><code>canClose</code></strong></td><td><a href="#">`bool</a></td><td><code>true</code></td><td>Whether to show the close button.</td></tr><tr><td><strong><code>canMinimize</code></strong></td><td><a href="#">`bool</a></td><td><code>false</code></td><td>Whether to show the minimize button.</td></tr><tr><td><strong><code>canMove</code></strong></td><td><a href="#">`bool</a></td><td><code>true</code></td><td>Whether the user can drag the window around.</td></tr><tr><td><strong><code>padding</code></strong></td><td><a href="#">`double</a></td><td><code>3</code></td><td>Padding from the window border to the window contents</td></tr><tr><td><strong><code>scrollable</code></strong></td><td><a href="#">`bool</a></td><td><code>false</code></td><td>Whether the contents of the window can be scrolled</td></tr></tbody></table>',6),s=[r];function a(c,l,i,h,p,w){return o(),e("div",null,s)}const f=t(n,[["render",a]]);export{u as __pageData,f as default};
