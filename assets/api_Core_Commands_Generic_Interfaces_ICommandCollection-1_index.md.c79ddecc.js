import{_ as e,c as t,o as a,a as r}from"./app.8e9479ff.js";const f=JSON.parse('{"title":"ICommandCollection<TCmd> Interface","description":"","frontmatter":{},"headers":[{"level":2,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[]}],"relativePath":"api/Core/Commands/Generic/Interfaces/ICommandCollection-1/index.md"}'),s={name:"api/Core/Commands/Generic/Interfaces/ICommandCollection-1/index.md"},n=r(`<h1 id="icommandcollection-tcmd-interface" tabindex="-1">ICommandCollection&lt;TCmd&gt; Interface <a class="header-anchor" href="#icommandcollection-tcmd-interface" aria-hidden="true">#</a></h1><p><strong>Namespace:</strong> <a href="./../">EvoSC.Core.Commands.Generic.Interfaces</a><br><strong>Assembly:</strong> EvoSC#<br><strong>Assembly Version:</strong> 1.0.0</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ICommandCollection</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TCmd</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h2><p><code>TCmd</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="./properties/Commands.html">Commands</a></td><td></td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="./methods/AddCommand.html">AddCommand(TCmd)</a></td><td></td></tr><tr><td><a href="./methods/CommandExists.html">CommandExists(string, string)</a></td><td></td></tr><tr><td><a href="./methods/GetCommand.html">GetCommand(string, string)</a></td><td></td></tr><tr><td><a href="./methods/RemoveCommand.html">RemoveCommand(string, string)</a></td><td></td></tr><tr><td><a href="./methods/RemoveGroup.html">RemoveGroup(string)</a></td><td></td></tr></tbody></table><hr><p><em>Documentation generated by <a href="https://github.com/ap0llo/mddocs" target="_blank" rel="noreferrer">MdDocs</a></em></p>`,11),o=[n];function d(i,l,m,c,p,h){return a(),t("div",null,o)}const _=e(s,[["render",d]]);export{f as __pageData,_ as default};
