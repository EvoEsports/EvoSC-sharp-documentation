import{_ as e,c as a,o as s,a as t}from"./app.4d2f09ba.js";const m=JSON.parse('{"title":"ReflectionUtils.HasReturnType Method","description":"","frontmatter":{},"headers":[{"level":2,"title":"Overloads","slug":"overloads","link":"#overloads","children":[]},{"level":2,"title":"HasReturnType(MethodInfo, Type)","slug":"hasreturntype-methodinfo-type","link":"#hasreturntype-methodinfo-type","children":[{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":3,"title":"Returns","slug":"returns","link":"#returns","children":[]}]},{"level":2,"title":"HasReturnType<T>(MethodInfo)","slug":"hasreturntype-t-methodinfo","link":"#hasreturntype-t-methodinfo","children":[{"level":3,"title":"Type Parameters","slug":"type-parameters","link":"#type-parameters","children":[]},{"level":3,"title":"Parameters","slug":"parameters-1","link":"#parameters-1","children":[]},{"level":3,"title":"Returns","slug":"returns-1","link":"#returns-1","children":[]}]}],"relativePath":"api/Core/Helpers/ReflectionUtils/methods/HasReturnType.md"}'),r={name:"api/Core/Helpers/ReflectionUtils/methods/HasReturnType.md"},n=t(`<h1 id="reflectionutils-hasreturntype-method" tabindex="-1">ReflectionUtils.HasReturnType Method <a class="header-anchor" href="#reflectionutils-hasreturntype-method" aria-hidden="true">#</a></h1><p><strong>Declaring Type:</strong> <a href="./../">ReflectionUtils</a><br><strong>Namespace:</strong> <a href="./../../">EvoSC.Core.Helpers</a><br><strong>Assembly:</strong> EvoSC#<br><strong>Assembly Version:</strong> 1.0.0</p><h2 id="overloads" tabindex="-1">Overloads <a class="header-anchor" href="#overloads" aria-hidden="true">#</a></h2><table><thead><tr><th>Signature</th><th>Description</th></tr></thead><tbody><tr><td><a href="#hasreturntypemethodinfo-type">HasReturnType(MethodInfo, Type)</a></td><td></td></tr><tr><td><a href="#hasreturntypetmethodinfo">HasReturnType&lt;T&gt;(MethodInfo)</a></td><td></td></tr></tbody></table><h2 id="hasreturntype-methodinfo-type" tabindex="-1">HasReturnType(MethodInfo, Type) <a class="header-anchor" href="#hasreturntype-methodinfo-type" aria-hidden="true">#</a></h2><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HasReturnType</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MethodInfo</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h3><p><code>method</code> MethodInfo</p><p><code>type</code> Type</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h3><p>bool</p><h2 id="hasreturntype-t-methodinfo" tabindex="-1">HasReturnType&lt;T&gt;(MethodInfo) <a class="header-anchor" href="#hasreturntype-t-methodinfo" aria-hidden="true">#</a></h2><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">HasReturnType</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#C792EA;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MethodInfo</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">method</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a></h3><p><code>T</code></p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h3><p><code>method</code> MethodInfo</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h3><p>bool</p><hr><p><em>Documentation generated by <a href="https://github.com/ap0llo/mddocs" target="_blank" rel="noreferrer">MdDocs</a></em></p>`,21),o=[n];function l(p,d,i,h,c,y){return s(),a("div",null,o)}const f=e(r,[["render",l]]);export{m as __pageData,f as default};
