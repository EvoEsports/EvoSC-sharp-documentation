import{_ as t,c as e,o as r,a}from"./app.8e9479ff.js";const C=JSON.parse('{"title":"PluginLoadContext Class","description":"","frontmatter":{},"headers":[{"level":2,"title":"Constructors","slug":"constructors","link":"#constructors","children":[]},{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[]}],"relativePath":"api/Core/Plugins/Info/PluginLoadContext/index.md"}'),s={name:"api/Core/Plugins/Info/PluginLoadContext/index.md"},o=a(`<h1 id="pluginloadcontext-class" tabindex="-1">PluginLoadContext Class <a class="header-anchor" href="#pluginloadcontext-class" aria-hidden="true">#</a></h1><p><strong>Namespace:</strong> <a href="./../">EvoSC.Core.Plugins.Info</a><br><strong>Assembly:</strong> EvoSC#<br><strong>Assembly Version:</strong> 1.0.0</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PluginLoadContext</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IPluginLoadContext</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Inheritance:</strong> object â†’ PluginLoadContext</p><p><strong>Implements:</strong> <a href="./../../Abstractions/IPluginLoadContext/">IPluginLoadContext</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="./constructors/">PluginLoadContext()</a></td><td></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="./properties/Instance.html">Instance</a></td><td></td></tr><tr><td><a href="./properties/LoadContext.html">LoadContext</a></td><td></td></tr><tr><td><a href="./properties/LoadId.html">LoadId</a></td><td></td></tr><tr><td><a href="./properties/MetaInfo.html">MetaInfo</a></td><td></td></tr><tr><td><a href="./properties/PluginClass.html">PluginClass</a></td><td></td></tr><tr><td><a href="./properties/ServiceProvider.html">ServiceProvider</a></td><td></td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="./methods/SetAssemblyContext.html">SetAssemblyContext(AssemblyLoadContext)</a></td><td></td></tr><tr><td><a href="./methods/SetInstance.html">SetInstance(IPlugin)</a></td><td></td></tr><tr><td><a href="./methods/SetPluginClass.html">SetPluginClass(Type)</a></td><td></td></tr><tr><td><a href="./methods/SetServiceProvider.html">SetServiceProvider(IServiceProvider)</a></td><td></td></tr><tr><td><a href="./methods/UnloadAssemblies.html">UnloadAssemblies()</a></td><td></td></tr></tbody></table><hr><p><em>Documentation generated by <a href="https://github.com/ap0llo/mddocs" target="_blank" rel="noreferrer">MdDocs</a></em></p>`,13),n=[o];function d(l,i,h,c,p,m){return r(),e("div",null,n)}const g=t(s,[["render",d]]);export{C as __pageData,g as default};
