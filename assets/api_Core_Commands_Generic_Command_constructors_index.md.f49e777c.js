import{_ as s,c as a,o,a as n}from"./app.fbda3309.js";const F=JSON.parse('{"title":"Command Constructors","description":"","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]}],"relativePath":"api/Core/Commands/Generic/Command/constructors/index.md"}'),e={name:"api/Core/Commands/Generic/Command/constructors/index.md"},r=n(`<h1 id="command-constructors" tabindex="-1">Command Constructors <a class="header-anchor" href="#command-constructors" aria-hidden="true">#</a></h1><p><strong>Declaring Type:</strong> <a href="./../">Command</a><br><strong>Namespace:</strong> <a href="./../../">EvoSC.Core.Commands.Generic</a><br><strong>Assembly:</strong> EvoSC#<br><strong>Assembly Version:</strong> 1.0.0</p><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Command</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">MethodInfo</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">methodInfo</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">groupType</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ICommandParameter</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pars</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">description</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> string permission </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> ICommandGroupInfo group </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h2><p><code>methodInfo</code> MethodInfo</p><p><code>groupType</code> Type</p><p><code>pars</code> IEnumerable&lt;<a href="./../../Interfaces/ICommandParameter/">ICommandParameter</a>&gt;</p><p><code>name</code> string</p><p><code>description</code> string</p><p><code>permission</code> string</p><p><code>group</code> <a href="./../../Interfaces/ICommandGroupInfo/">ICommandGroupInfo</a></p><hr><p><em>Documentation generated by <a href="https://github.com/ap0llo/mddocs" target="_blank" rel="noreferrer">MdDocs</a></em></p>`,13),p=[r];function t(l,c,d,m,i,C){return o(),a("div",null,p)}const D=s(e,[["render",t]]);export{F as __pageData,D as default};
