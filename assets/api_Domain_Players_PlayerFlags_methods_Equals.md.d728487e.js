import{_ as a,c as e,o as s,a as r}from"./app.fbda3309.js";const y=JSON.parse('{"title":"PlayerFlags.Equals Method","description":"","frontmatter":{},"headers":[{"level":2,"title":"Overloads","slug":"overloads","link":"#overloads","children":[]},{"level":2,"title":"Equals(PlayerFlags)","slug":"equals-playerflags","link":"#equals-playerflags","children":[{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":3,"title":"Returns","slug":"returns","link":"#returns","children":[]}]},{"level":2,"title":"Equals(object)","slug":"equals-object","link":"#equals-object","children":[{"level":3,"title":"Parameters","slug":"parameters-1","link":"#parameters-1","children":[]},{"level":3,"title":"Returns","slug":"returns-1","link":"#returns-1","children":[]}]}],"relativePath":"api/Domain/Players/PlayerFlags/methods/Equals.md"}'),l={name:"api/Domain/Players/PlayerFlags/methods/Equals.md"},t=r(`<h1 id="playerflags-equals-method" tabindex="-1">PlayerFlags.Equals Method <a class="header-anchor" href="#playerflags-equals-method" aria-hidden="true">#</a></h1><p><strong>Declaring Type:</strong> <a href="./../">PlayerFlags</a><br><strong>Namespace:</strong> <a href="./../../">EvoSC.Domain.Players</a><br><strong>Assembly:</strong> EvoSC#<br><strong>Assembly Version:</strong> 1.0.0</p><h2 id="overloads" tabindex="-1">Overloads <a class="header-anchor" href="#overloads" aria-hidden="true">#</a></h2><table><thead><tr><th>Signature</th><th>Description</th></tr></thead><tbody><tr><td><a href="#equalsplayerflags">Equals(PlayerFlags)</a></td><td></td></tr><tr><td><a href="#equalsobject">Equals(object)</a></td><td></td></tr></tbody></table><h2 id="equals-playerflags" tabindex="-1">Equals(PlayerFlags) <a class="header-anchor" href="#equals-playerflags" aria-hidden="true">#</a></h2><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Equals</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">PlayerFlags</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">other</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h3><p><code>other</code> <a href="./../">PlayerFlags</a></p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h3><p>bool</p><h2 id="equals-object" tabindex="-1">Equals(object) <a class="header-anchor" href="#equals-object" aria-hidden="true">#</a></h2><div class="language-csharp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Equals</span><span style="color:#89DDFF;">(object</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">obj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h3><p><code>obj</code> object</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h3><p>bool</p><hr><p><em>Documentation generated by <a href="https://github.com/ap0llo/mddocs" target="_blank" rel="noreferrer">MdDocs</a></em></p>`,18),n=[t];function o(p,d,c,i,h,u){return s(),e("div",null,n)}const g=a(l,[["render",o]]);export{y as __pageData,g as default};
