import{_ as t,o as e,c as o,S as d}from"./chunks/framework.f15d8f8c.js";const g=JSON.parse('{"title":"Chip","description":"","frontmatter":{},"headers":[],"relativePath":"development/modules/manialinks/components/chip.md","filePath":"development/modules/manialinks/components/chip.md"}'),s={name:"development/modules/manialinks/components/chip.md"},a=d('<h1 id="chip" tabindex="-1">Chip <a class="header-anchor" href="#chip" aria-label="Permalink to &quot;Chip&quot;">​</a></h1><p>Chips can be used as a way to visualize multiple values in a field.</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">import</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">component</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EvoSC.Controls.Chip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">as</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Chip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><strong><code>id</code></strong></td><td><a href="#"><code>string</code></a></td><td><code>evosc_chip</code></td><td>Unique identifier for the chip</td></tr><tr><td><strong><code>text</code></strong></td><td><a href="#"><code>string</code></a></td><td>``</td><td>Text to show on the chip</td></tr><tr><td><strong><code>x</code></strong></td><td><a href="#"><code>double</code></a></td><td><code>0.0</code></td><td>X Position of the chip</td></tr><tr><td><strong><code>y</code></strong></td><td><a href="#"><code>double</code></a></td><td><code>0.0</code></td><td>Y position of the chip</td></tr><tr><td><strong><code>width</code></strong></td><td><a href="#"><code>double</code></a></td><td><code>15</code></td><td>Width of the chip</td></tr><tr><td><strong><code>style</code></strong></td><td><a href="#"><code>string</code></a></td><td><code>Square</code></td><td>The layout style, can be: Round or Square</td></tr><tr><td><strong><code>closable</code></strong></td><td><a href="#"><code>bool</code></a></td><td><code>false</code></td><td>Whether this chip can be closed/removed/hidden. Shows a close button</td></tr><tr><td><strong><code>hidden</code></strong></td><td><a href="#"><code>bool</code></a></td><td><code>false</code></td><td>Whether to hide this chip by default</td></tr><tr><td><strong><code>severity</code></strong></td><td><a href="#"><code>string</code></a></td><td><code>primary</code></td><td>The severity color of the chip, can be: primary, secondary, success, info, warning, danger</td></tr><tr><td><strong><code>bgColor</code></strong></td><td><a href="#"><code>string?</code></a></td><td>``</td><td>Custom background color of the chip</td></tr><tr><td><strong><code>textColor</code></strong></td><td><a href="#"><code>string?</code></a></td><td>``</td><td>Custom text color of the chip</td></tr></tbody></table>',6),r=[a];function c(n,i,l,p,h,m){return e(),o("div",null,r)}const f=t(s,[["render",c]]);export{g as __pageData,f as default};
